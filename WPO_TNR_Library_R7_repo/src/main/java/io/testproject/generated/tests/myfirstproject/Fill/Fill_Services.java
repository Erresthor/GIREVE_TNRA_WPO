package io.testproject.generated.tests.myfirstproject;

import io.testproject.java.annotations.v2.Parameter;
import io.testproject.java.annotations.v2.Test;
import io.testproject.java.enums.ParameterDirection;
import io.testproject.java.enums.TakeScreenshotConditionType;
import io.testproject.java.sdk.v2.drivers.WebDriver;
import io.testproject.java.sdk.v2.enums.ExecutionResult;
import io.testproject.java.sdk.v2.exceptions.FailureException;
import io.testproject.java.sdk.v2.reporters.TestReporter;
import io.testproject.java.sdk.v2.tests.WebTest;
import io.testproject.java.sdk.v2.tests.helpers.WebTestHelper;
import io.testproject.proxy.addon.WebListOperations;
import io.testproject.proxy.addon.actions.ClickOnListItemWhichContainsText;
import io.testproject.proxy.addon.actions.ClickOnNthItem;
import java.lang.String;
import org.openqa.selenium.By;
import org.openqa.selenium.Capabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * This class was automatically generated by TestProject
 * Project: My first Project
 * Test: Fill_Services
 * Generated by: C ANNICCHIARICO (come.annicchiarico@gireve.com)
 * Generated on Fri Aug 07 13:17:52 GMT 2020.
 */
@Test(
    name = "Fill_Services",
    description = "This test was auto generated from steps of the 'OfferCreation' test",
    version = "1.0"
)
public class Fill_Services implements WebTest {
    @Parameter(
        defaultValue = "R7",
        direction = ParameterDirection.INPUT
    )
    public String ENVIRONNEMENT;

    @Parameter(
      defaultValue = "Recharge nominale",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringTypeDeService;
  
@Parameter(
    defaultValue = "o",
    direction = ParameterDirection.INPUT
)
public String Fill_Services_boolModifyEVSEGroup;

  @Parameter(
      description = "Service gratuit ? [o/n]",
      defaultValue = "n",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_boolServiceGratuit;

  @Parameter(
      description = "Session prix mini ? [o/n]",
      defaultValue = "o",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_boolHasMaximumPrice;

  @Parameter(
      description = "Session prix maxi ? [o/n]",
      defaultValue = "o",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_boolHasMinimumPrice;

  @Parameter(
      description = "Dépends du Créneau [o/n]",
      defaultValue = "o",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_boolDependsOnCreneau;

  @Parameter(
      description = "PrixDeBase",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valueBasePrice;

  @Parameter(
      description = "ValeurParamDePrix",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valueBaseParam;

  @Parameter(
      description = "IndiceParamDePrix",
      defaultValue = "12",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_iBaseParam;

  @Parameter(
      description = "Devise",
      defaultValue = "EUR",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringDevise;

  @Parameter(
      description = "IndicePrecisionPrix",
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_iPrecPrice;

  @Parameter(
      description = "IndicePrecisionTemps",
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_iPrecTime;

  @Parameter(
      description = "LimiterTarif [0/1]",
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_boolLimitTarif;

  @Parameter(
      description = "Indice de comparateur de paramètre 0",
      defaultValue = "2",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_iParamSelectorPowers0;

  @Parameter(
      description = "Indice de comparateur de paramètre 1",
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_iParamSelectorPowers1;

  @Parameter(
      description = "Valeur de paramètre puissance 0",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valueParamPowers0;

  @Parameter(
      description = "Valeur de paramètre puissance 1",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valueParamPowers1;

  @Parameter(
      description = "Valeur de paramètre intervalle de temps 0",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valueParamTime0;

  @Parameter(
      description = "Valeur de paramètre intervalle de temps 1",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valueParamTime1;

  @Parameter(
      description = "CompleterTarif [o/n]",
      defaultValue = "o",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_boolCompleteTariff;

  @Parameter(
      description = "Valeur de la limite du Tariff",
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valueLimitTarif;

  @Parameter(
      description = "Minimum session HT",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valueMinAmountSession;

  @Parameter(
      description = "Maximum session HT",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valueMaxAmountSession;

  @Parameter(
      description = "Jours de la semaine valides",
      defaultValue = "Lun,Mar,Mer,Jeu,Ven",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringInputDays;

  @Parameter(
      description = "Heure de début Matin",
      defaultValue = "00h00",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringHourMorningStart;

  @Parameter(
      description = "Heure de fin Matin",
      defaultValue = "12h00",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringHourMorningEnd;

  @Parameter(
      description = "Heure de début après-midi",
      defaultValue = "12h00",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringHourAfternoonStart;

  @Parameter(
      description = "Heure de fin après-midi",
      defaultValue = "23h00",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringHourAfternoonEnd;

  @Parameter(
      defaultValue = "ServiceName",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringServiceNameEN;

  @Parameter(
      defaultValue = "Nom Service",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringServiceNameFR;

  @Parameter(
      defaultValue = "COM113",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringEVSEGroupName;

  @Parameter(
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_iCDRFinDeCharge;

  @Parameter(
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_iEventDebutTransaction;

  @Parameter(
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_iEventFinTransaction;

  @Parameter(
      defaultValue = "This a service (i swear)",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringDescriptionFonctServEN;

  @Parameter(
      defaultValue = "Ceci est un service (si, si !)",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringDescriptionFonctServFR;

  @Parameter(
      defaultValue = "o",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_boolCDRInter;

  @Parameter(
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_valuePasCDRInter;

  @Parameter(
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_iUnitPasCDRInter;

  @Parameter(
      defaultValue = "RFI,TOK,TES",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_stringModeAcces;

  @Parameter(
      description = "Tarification dans l'article 9 ? [o/n]",
      defaultValue = "o",
      direction = ParameterDirection.INPUT
  )
  public String Fill_Services_boolArticle9Tariff;

  public ExecutionResult execute(WebTestHelper helper) throws FailureException {
    WebDriver driver = helper.getDriver();
    // set timeout for driver actions (similar to step timeout)
    driver.setTimeout(15000);
    TestReporter report = helper.getReporter();
    By by;
    boolean booleanResult;
    ExecutionResult executionresult;
    ClickOnListItemWhichContainsText clickOnListItemWhichContainsText;

    

    // 1. Click 'Ajouter un premier service &agrave; v...'
    by = By.xpath("/html/body/div[2]/div/div/form/div[1]/div/a");
    booleanResult = driver.testproject().click(by);
    report.step("Click 'Ajouter un premier service &agrave; v...'", booleanResult, TakeScreenshotConditionType.Never);

    if ((ENVIRONNEMENT).equals("R7")) {
        // 2. Clicks on a list item based on text
        clickOnListItemWhichContainsText = WebListOperations.clickOnListItemWhichContainsText(Fill_Services_stringTypeDeService);
        by = By.cssSelector("#service-type");
        executionresult = helper.executeProxy(clickOnListItemWhichContainsText, by);
        booleanResult = (executionresult==ExecutionResult.PASSED) ;
        report.step("Clicks on a list item based on text", true, TakeScreenshotConditionType.Never);
        if (!booleanResult) {
            if (Fill_Services_stringTypeDeService.equals("Recharge nominale")) {
                clickOnListItemWhichContainsText = WebListOperations.clickOnListItemWhichContainsText("Basic charging");
                by = By.cssSelector("#service-type");
                executionresult = helper.executeProxy(clickOnListItemWhichContainsText, by);
                booleanResult = (executionresult==ExecutionResult.PASSED) ;
                report.step("Clicks on a list item based on text", true, TakeScreenshotConditionType.Never);
            }
        }

         // 3. Click 'offer-service-type'
        by = By.cssSelector("#offer-service-type");
        booleanResult = driver.testproject().click(by);
        report.step("Click 'offer-service-type'", booleanResult, TakeScreenshotConditionType.Never);

    }
    Fill_Services_OfferServiceDetails a = new Fill_Services_OfferServiceDetails();
        a.BaseParam = Fill_Services_valueBaseParam;
        a.BasePrice = Fill_Services_valueBasePrice;
        a.iCDRFinDeCharge = Fill_Services_iCDRFinDeCharge;
        a.CdrInterBool = Fill_Services_boolCDRInter;
        a.DescriptionFonctServEN = Fill_Services_stringDescriptionFonctServEN;
        a.DescriptionFonctServFR = Fill_Services_stringDescriptionFonctServFR;
        a.Devise = Fill_Services_stringDevise;
        a.EVSEGroupName = Fill_Services_stringEVSEGroupName;
        a.iEventDebutTransaction = Fill_Services_iEventDebutTransaction;
        a.iEventFinTransaction = Fill_Services_iEventFinTransaction;
        a.ModeAcces = Fill_Services_stringModeAcces;
        a.ServiceNameEN = Fill_Services_stringServiceNameEN;
        a.ServiceNameFR = Fill_Services_stringServiceNameFR;
        a.iUnitPasCDRInter = Fill_Services_iUnitPasCDRInter;
        a.ValuePasCDRInter = Fill_Services_valuePasCDRInter;
        a.article9Tariff = Fill_Services_boolArticle9Tariff;
        a.boolLimitTariff = Fill_Services_boolLimitTarif;
        a.completeTariff = Fill_Services_boolCompleteTariff;
        a.dependsOnCreneau = Fill_Services_boolDependsOnCreneau;
        a.hasMaximumPrice = Fill_Services_boolHasMaximumPrice;
        a.hasMinimumPrice = Fill_Services_boolHasMinimumPrice;
        a.hourAfternoonEnd = Fill_Services_stringHourAfternoonEnd;
        a.hourAfternoonStart = Fill_Services_stringHourAfternoonStart;
        a.hourMorningEnd = Fill_Services_stringHourMorningEnd;
        a.hourMorningStart = Fill_Services_stringHourMorningStart;
        a.iBaseParam = Fill_Services_iBaseParam;
        a.iPrecPrice = Fill_Services_iPrecPrice;
        a.iPrecTime = Fill_Services_iPrecTime;
        a.idParamSelectorPowers0 = Fill_Services_iParamSelectorPowers0;
        a.idParamSelectorPowers1 = Fill_Services_iParamSelectorPowers1;
        a.inputDays = Fill_Services_stringInputDays;
        a.limitTariffValue = Fill_Services_valueLimitTarif;
        a.maxAmountSession = Fill_Services_valueMaxAmountSession;
        a.minAmountSession = Fill_Services_valueMinAmountSession;
        a.modifyEVSEGroup = Fill_Services_boolModifyEVSEGroup;
        a.serviceGratuit = Fill_Services_boolServiceGratuit;
        a.valueParamPowers0 = Fill_Services_valueParamPowers0;
        a.valueParamPowers1= Fill_Services_valueParamPowers1;
        a.valueParamTime0 = Fill_Services_valueParamTime0;
        a.valueParamTime1 = Fill_Services_valueParamTime1;
        a.ENVIRONNEMENT = ENVIRONNEMENT;
    executionresult = a.execute(helper);
    report.step("Fill Tariff", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);

    // 3. Click 'offer-service-type'
    by = By.xpath("/html/body/div[2]/div/div/form/div[1]/div[1]/div[2]/div/div[2]/button");
    booleanResult = driver.testproject().click(by);
    report.step("Click 'Valider'", booleanResult, TakeScreenshotConditionType.Never);

    if (Fill_Services_boolModifyEVSEGroup.equals("o")){
        by = By.xpath("/html/body/div[2]/div/div/form/div[1]/div/div[2]/div[4]/div[2]/div[1]/div[3]/a");
        booleanResult = driver.testproject().click(by);
        report.step("Click 'Editer offre supplementaire'", booleanResult, TakeScreenshotConditionType.Never);
        
        a = new Fill_Services_OfferServiceDetails();
        a.BaseParam = Fill_Services_valueBaseParam;
        a.BasePrice = Fill_Services_valueBasePrice;
        a.iCDRFinDeCharge = Fill_Services_iCDRFinDeCharge;
        a.CdrInterBool = Fill_Services_boolCDRInter;
        a.DescriptionFonctServEN = Fill_Services_stringDescriptionFonctServEN + " - 2";
        a.DescriptionFonctServFR = Fill_Services_stringDescriptionFonctServFR + " - 2";
        a.Devise = Fill_Services_stringDevise;
        a.EVSEGroupName = Fill_Services_stringEVSEGroupName;
        a.iEventDebutTransaction = Fill_Services_iEventDebutTransaction;
        a.iEventFinTransaction = Fill_Services_iEventFinTransaction;
        a.ModeAcces = Fill_Services_stringModeAcces;
        a.ServiceNameEN = Fill_Services_stringServiceNameEN+ " - 2";
        a.ServiceNameFR = Fill_Services_stringServiceNameFR+ " - 2";
        a.iUnitPasCDRInter = Fill_Services_iUnitPasCDRInter;
        a.ValuePasCDRInter = Fill_Services_valuePasCDRInter;
        a.article9Tariff = Fill_Services_boolArticle9Tariff;
        a.boolLimitTariff = Fill_Services_boolLimitTarif;
        a.completeTariff = Fill_Services_boolCompleteTariff;
        a.dependsOnCreneau = Fill_Services_boolDependsOnCreneau;
        a.hasMaximumPrice = Fill_Services_boolHasMaximumPrice;
        a.hasMinimumPrice = Fill_Services_boolHasMinimumPrice;
        a.hourAfternoonEnd = Fill_Services_stringHourAfternoonEnd;
        a.hourAfternoonStart = Fill_Services_stringHourAfternoonStart;
        a.hourMorningEnd = Fill_Services_stringHourMorningEnd;
        a.hourMorningStart = Fill_Services_stringHourMorningStart;
        a.iBaseParam = Fill_Services_iBaseParam;
        a.iPrecPrice = Fill_Services_iPrecPrice;
        a.iPrecTime = Fill_Services_iPrecTime;
        a.idParamSelectorPowers0 = Fill_Services_iParamSelectorPowers0;
        a.idParamSelectorPowers1 = Fill_Services_iParamSelectorPowers1;
        a.inputDays = Fill_Services_stringInputDays;
        a.limitTariffValue = Fill_Services_valueLimitTarif;
        a.maxAmountSession = Fill_Services_valueMaxAmountSession;
        a.minAmountSession = Fill_Services_valueMinAmountSession;
        a.modifyEVSEGroup = "n";
        a.serviceGratuit = Fill_Services_boolServiceGratuit;
        a.valueParamPowers0 = Fill_Services_valueParamPowers0;
        a.valueParamPowers1= Fill_Services_valueParamPowers1;
        a.valueParamTime0 = Fill_Services_valueParamTime0;
        a.valueParamTime1 = Fill_Services_valueParamTime1;
        a.ENVIRONNEMENT =ENVIRONNEMENT;
        executionresult = a.execute(helper);
        report.step("Fill Tariff", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);

        // 3. Click 'offer-service-type'
        by = By.xpath("/html/body/div[2]/div/div/form/div[1]/div[1]/div[2]/div/div[2]/button");
        booleanResult = driver.testproject().click(by);
        report.step("Click 'Valider'", booleanResult, TakeScreenshotConditionType.Never);
    }

    return ExecutionResult.PASSED;
  }
}
