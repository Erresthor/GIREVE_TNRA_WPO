package io.testproject.generated.tests.myfirstproject;

import io.testproject.java.annotations.v2.Parameter;
import io.testproject.java.annotations.v2.Test;
import io.testproject.java.enums.ParameterDirection;
import io.testproject.java.enums.TakeScreenshotConditionType;
import io.testproject.java.sdk.v2.drivers.WebDriver;
import io.testproject.java.sdk.v2.enums.ExecutionResult;
import io.testproject.java.sdk.v2.exceptions.FailureException;
import io.testproject.java.sdk.v2.reporters.TestReporter;
import io.testproject.java.sdk.v2.tests.WebTest;
import io.testproject.java.sdk.v2.tests.helpers.WebTestHelper;
import io.testproject.proxy.addon.WebExtensions;
import io.testproject.proxy.addon.io.testproject.addons.web.element.select.SelectOptionbyVisibleText;
import jdk.internal.loader.Resource;

import org.openqa.selenium.By;
import java.io.* ;

/**
 * This class was automatically generated by TestProject
 * Project: My first Project
 * Test: TariffFiller
 * Generated by: C ANNICCHIARICO (come.annicchiarico@gireve.com)
 * Generated on Wed Aug 05 13:28:38 GMT 2020.
 */
@Test(
    name = "Fill_Services_Tarification",
    description = "This test was auto generated from steps of the 'FillOutOffer_WifiService' test",
    version = "1.0"
)
public class Fill_Services_Tarification implements WebTest {
    @Parameter(
        description = "Service gratuit ? [o/n]",
        defaultValue = "n",
        direction = ParameterDirection.INPUT
    )
    public String serviceGratuit;

    @Parameter(
        description = "Session prix mini ? [o/n]",
        defaultValue = "n",
        direction = ParameterDirection.INPUT
    )
    public String hasMaximumPrice;

    @Parameter(
        description = "Session prix maxi ? [o/n]",
        defaultValue = "n",
        direction = ParameterDirection.INPUT
    )
    public String hasMinimumPrice;

    @Parameter(
        description = "Dépends du Créneau [o/n]",
        defaultValue = "n",
        direction = ParameterDirection.INPUT
    )
    public String dependsOnCreneau;

    @Parameter(
      description = "Niveau de la tarification",
      defaultValue = "pricing_0",
      direction = ParameterDirection.INPUT
  )
  public String elementAddress;

  @Parameter(
      description = "PrixDeBase",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String BasePrice;

  @Parameter(
    description = "ValeurParamDePrix",
    defaultValue = "0",
    direction = ParameterDirection.INPUT
  )
  public String BaseParam;

  @Parameter(
      description = "IndiceParamDePrix",
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String iBaseParam;


    @Parameter(
      description = "Devise",
      defaultValue = "EUR",
      direction = ParameterDirection.INPUT
  )
  public String Devise;

  @Parameter(
      description = "IndicePrecisionPrix",
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String iPrecPrice;

  @Parameter(
      description = "IndicePrecisionTemps",
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String iPrecTime;

  @Parameter(
    description = "LimiterTarif [0/1]",
    defaultValue = "0",
    direction = ParameterDirection.INPUT
  )
  public String boolLimitTariff;

  @Parameter(
    description = "Indice de comparateur de paramètre 0",
    defaultValue = "1",
    direction = ParameterDirection.INPUT
  )
  public String idParamSelectorPowers0;

  @Parameter(
    description = "Indice de comparateur de paramètre 1",
    defaultValue = "1",
    direction = ParameterDirection.INPUT
  )
  public String idParamSelectorPowers1;

  @Parameter(
    description = "Valeur de paramètre puissance 0",
    defaultValue = "0",
    direction = ParameterDirection.INPUT
  )
  public String valueParamPowers0;

  @Parameter(
    description = "Valeur de paramètre puissance 1",
    defaultValue = "0",
    direction = ParameterDirection.INPUT
  )
  public String valueParamPowers1;

  @Parameter(
    description = "Valeur de paramètre intervalle de temps 0",
    defaultValue = "0",
    direction = ParameterDirection.INPUT
  )
  public String valueParamTime0;

  @Parameter(
    description = "Valeur de paramètre intervalle de temps 1",
    defaultValue = "0",
    direction = ParameterDirection.INPUT
  )
  public String valueParamTime1;

  @Parameter(
    description = "CompleterTarif [0/1]",
    defaultValue = "1",
    direction = ParameterDirection.INPUT
  )
  public String completeTariff;

  @Parameter(
      description = "Valeur de la lmite du Tariff",
      defaultValue = "1",
      direction = ParameterDirection.INPUT
  )
  public String limitTariffValue;

  @Parameter(
    description = "Minimum session HT",
    defaultValue = "0",
    direction = ParameterDirection.INPUT
  )
  public String minAmountSession;

  @Parameter(
      description = "Maximum session HT",
      defaultValue = "0",
      direction = ParameterDirection.INPUT
  )
  public String maxAmountSession;


  @Parameter(
    description = "Jours de la semaine valides",
    defaultValue = "Lun,Mar,Mer,Jeu,Ven,Sam,Dim",
    direction = ParameterDirection.INPUT
  )
  public String inputDays;

  @Parameter(
    description = "Heure de début Matin",
    defaultValue = "00h00",
    direction = ParameterDirection.INPUT
  )
  public String hourMorningStart;

  @Parameter(
    description = "Heure de fin Matin",
    defaultValue = "12h00",
    direction = ParameterDirection.INPUT
  )
  public String hourMorningEnd;

  @Parameter(
    description = "Heure de début après-midi",
    defaultValue = "12h00",
    direction = ParameterDirection.INPUT
  )
  public String hourAfternoonStart;

  @Parameter(
    description = "Heure de fin après-midi",
    defaultValue = "24h00",
    direction = ParameterDirection.INPUT
  )
  public String hourAfternoonEnd;

  @Parameter(
    description = "Environnement",
    defaultValue = "R7",
    direction = ParameterDirection.INPUT
  )
  public String ENVIRONNEMENT;

  public ExecutionResult execute(WebTestHelper helper) throws FailureException {
    WebDriver driver = helper.getDriver();
    // set timeout for driver actions (similar to step timeout)
    driver.setTimeout(15000);
    TestReporter report = helper.getReporter();
    By by;
    boolean booleanResult;
    ExecutionResult executionresult;
    SelectOptionbyVisibleText selectOptionbyVisibleText;

    if (serviceGratuit.equals("o")) {
      // 13. Click 'Gratuit'
      by = By.xpath("//*[@id='portal_bundle_associated_service_form_"+elementAddress+"']/div[4]/div[1]/div/div/label/i");
      booleanResult = driver.testproject().click(by);
      report.step("Click 'Service Gratuit'", booleanResult, TakeScreenshotConditionType.Never);
    } else {
      if (hasMaximumPrice.equals("o")) {
        // 13. Click 'Prix max pour session'
        by = By.xpath("//*[@id='portal_bundle_associated_service_form_"+elementAddress+"']/div[4]/div[4]/div[1]/div[1]/div/div/label/i");
        booleanResult = driver.testproject().click(by);
        report.step("Click 'Maximum Price'", booleanResult, TakeScreenshotConditionType.Never);

        by = By.cssSelector("#portal_bundle_associated_service_form_" + elementAddress + "_maximumAmountValue");
        booleanResult = driver.testproject().typeText(by,maxAmountSession);
        report.step("Type 'max amount value'", booleanResult, TakeScreenshotConditionType.Never);

        selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText(Devise);
        by = By.cssSelector("#portal_bundle_associated_service_form_" + elementAddress + "_maximumAmountUnit");
        executionresult = helper.executeProxy(selectOptionbyVisibleText, by);
        report.step("Select options in 'portal_bundle_associated_service_form_"+ elementAddress +"_maximumAmountUnit' with text 'Devise'", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);
        }
      if (hasMinimumPrice.equals("o")){
        // 13. Click 'Prix min pour session'
        by = By.xpath("//*[@id='portal_bundle_associated_service_form_"+elementAddress+"']/div[4]/div[5]/div[1]/div[1]/div/div/label/i");
        booleanResult = driver.testproject().click(by);
        report.step("Click 'Minimum Price'", booleanResult, TakeScreenshotConditionType.Never);

        by = By.cssSelector("#portal_bundle_associated_service_form_" + elementAddress + "_minimumAmountValue");
        booleanResult = driver.testproject().typeText(by,minAmountSession);
        report.step("Type 'min amount value'", booleanResult, TakeScreenshotConditionType.Never);

        selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText(Devise);
        by = By.cssSelector("#portal_bundle_associated_service_form_" + elementAddress + "_minimumAmountUnit");
        executionresult = helper.executeProxy(selectOptionbyVisibleText, by);
        report.step("Select options in 'portal_bundle_associated_service_form_"+ elementAddress +"_maximumAmountUnit' with text 'Devise'", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);
      }

      // FILL TARIFF
      Fill_Services_Tarif tariffFiller = new Fill_Services_Tarif() ;
      tariffFiller.BaseParam = BaseParam ;
      tariffFiller.BasePrice = BasePrice ;
      tariffFiller.elementAddress = elementAddress + "_prices_0";
      tariffFiller.iBaseParam = iBaseParam ;
      tariffFiller.iPrecPrice = iPrecPrice ;
      tariffFiller.iPrecTime = iPrecTime;
      tariffFiller.Devise = Devise;
      tariffFiller.boolLimitTariff = boolLimitTariff;
      tariffFiller.limitTariffValue = limitTariffValue ;
      tariffFiller.idParamSelectorPowers0 = idParamSelectorPowers0 ;
      tariffFiller.idParamSelectorPowers1 = idParamSelectorPowers1 ;
      tariffFiller.valueParamPowers0 = valueParamPowers0;
      tariffFiller.valueParamPowers1 = valueParamPowers1 ;
      tariffFiller.valueParamTime0 = valueParamTime0 ;
      tariffFiller.valueParamTime1 = valueParamTime1 ;
      tariffFiller.completeTariff =completeTariff ;
      tariffFiller.ENVIRONNEMENT = ENVIRONNEMENT;
      executionresult = tariffFiller.execute(helper);
      report.step("Run Tarif Filler", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);
    }

    if (dependsOnCreneau.equals("o")) {
      // 13. Click 'Gratuit'
      by = By.xpath("//*[@id='opening-time-portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningTime']/div/div/label/i");
      booleanResult = driver.testproject().click(by);
      report.step("Click 'Service Gratuit'", booleanResult, TakeScreenshotConditionType.Never);

      String[] days = inputDays.split(",") ;
      int n = days.length ;
      for (int j = 0; j<n; j++){
        String day = days[j] ;
        if (day.equals("Lun")) {
          by = By.xpath("//*[@id='service-service-input-portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningTime']/div/div/div/div[1]/div/label[1]/span");
        } else if (day.equals("Mar")) {
          by = By.xpath("//*[@id='service-service-input-portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningTime']/div/div/div/div[1]/div/label[2]/span");
        } else if (day.equals("Mer")) {
          by = By.xpath("//*[@id='service-service-input-portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningTime']/div/div/div/div[1]/div/label[3]/span");
        } else if (day.equals("Jeu")) {
          by = By.xpath("//*[@id='service-service-input-portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningTime']/div/div/div/div[1]/div/label[4]/span");
        } else if (day.equals("Ven")) {
          by = By.xpath("//*[@id='service-service-input-portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningTime']/div/div/div/div[1]/div/label[5]/span");
        } else if (day.equals("Sam")) {
          by = By.xpath("//*[@id='service-service-input-portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningTime']/div/div/div/div[1]/div/label[6]/span");
        }else if (day.equals("Sun")) {
          by = By.xpath("//*[@id='service-service-input-portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningTime']/div/div/div/div[1]/div/label[7]/span");
        } else {
          by = By.xpath("//*[@id='service-service-input-portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningTime']/div/div/div/div[1]/div/label[0]/span");
        }
        booleanResult = driver.testproject().click(by);
        report.step("Click '"+ day+"'", true, TakeScreenshotConditionType.Never);
      }
      // 39. Click 'portal_bundle_associated_service_form_pricing_0_serviceOpeningHours_morningStart'
      by = By.cssSelector("#portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_morningStart");
      booleanResult = driver.testproject().click(by);
      report.step("Click 'portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_morningStart'", booleanResult, TakeScreenshotConditionType.Never);
  
      // 40. Select options in 'portal_bundle_associated_service_form_pricing_0_serviceOpeningHours_morningStart' with text '[NONE]'
      selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText(hourMorningStart);
      by = By.cssSelector("#portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_morningStart");
      executionresult = helper.executeProxy(selectOptionbyVisibleText, by);
      report.step("Select options in 'portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_morningStart' with text 'hourMorningStart'", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);
  
      // 41. Click 'portal_bundle_associated_service_form_pricing_0_serviceOpeningHours_morningEnd'
      by = By.cssSelector("#portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_morningEnd");
      booleanResult = driver.testproject().click(by);
      report.step("Click 'portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_morningEnd'", booleanResult, TakeScreenshotConditionType.Never);
  
      // 42. Select options in 'portal_bundle_associated_service_form_pricing_0_serviceOpeningHours_morningEnd' with text '[NONE]'
      selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText(hourMorningEnd);
      by = By.cssSelector("#portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_morningEnd");
      executionresult = helper.executeProxy(selectOptionbyVisibleText, by);
      report.step("Select options in 'portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_morningEnd' with text 'hourMorningEnd'", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);
  
      // 43. Click 'portal_bundle_associated_service_form_pricing_0_serviceOpeningHours_afternoonStart'
      by = By.cssSelector("#portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_afternoonStart");
      booleanResult = driver.testproject().click(by);
      report.step("Click 'portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_afternoonStart'", booleanResult, TakeScreenshotConditionType.Never);
  
      // 44. Select options in 'portal_bundle_associated_service_form_pricing_0_serviceOpeningHours_afternoonStart' with text '[NONE]'
      selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText(hourAfternoonStart);
      by = By.cssSelector("#portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_afternoonStart");
      executionresult = helper.executeProxy(selectOptionbyVisibleText, by);
      report.step("Select options in 'portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_afternoonStart' with text 'hourAfternoonStart'", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);
  
      // 45. Click 'portal_bundle_associated_service_form_pricing_0_serviceOpeningHours_afternoonStart'
      by = By.cssSelector("#portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_afternoonEnd");
      booleanResult = driver.testproject().click(by);
      report.step("Click 'portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_afternoonEnd'", booleanResult, TakeScreenshotConditionType.Never);
  
      // 46. Select options in 'portal_bundle_associated_service_form_pricing_0_serviceOpeningHours_afternoonEnd' with text '[NONE]'
      selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText(hourAfternoonEnd);
      by = By.cssSelector("#portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_afternoonEnd");
      executionresult = helper.executeProxy(selectOptionbyVisibleText, by);
      report.step("Select options in 'portal_bundle_associated_service_form_"+elementAddress+"_serviceOpeningHours_afternoonEnd' with text 'hourAfternoonEnd'", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);
    
    
    
      // ANOTHER TARIFICATION HAS APPEARED --> Fill it out asap.
      Fill_Services_Tarification trftionFiller = new Fill_Services_Tarification();
      trftionFiller.elementAddress = "pricing_1"  ;
      trftionFiller.serviceGratuit = "o" ;
      trftionFiller.dependsOnCreneau ="n";
      trftionFiller.ENVIRONNEMENT = ENVIRONNEMENT;
      executionresult = trftionFiller.execute(helper);
      report.step("Fill Tariff", executionresult == ExecutionResult.PASSED, TakeScreenshotConditionType.Never);
    }


    return ExecutionResult.PASSED;  
  }




}
