package io.testproject.generated.tests.myfirstproject;

import io.testproject.java.annotations.v2.Parameter;
import io.testproject.java.annotations.v2.Test;
import io.testproject.java.enums.ParameterDirection;
import io.testproject.java.enums.TakeScreenshotConditionType;
import io.testproject.java.sdk.v2.drivers.WebDriver;
import io.testproject.java.sdk.v2.enums.ExecutionResult;
import io.testproject.java.sdk.v2.exceptions.FailureException;
import io.testproject.java.sdk.v2.reporters.TestReporter;
import io.testproject.java.sdk.v2.tests.WebTest;
import io.testproject.java.sdk.v2.tests.helpers.WebTestHelper;
import io.testproject.proxy.addon.WebListOperations;
import io.testproject.proxy.addon.actions.ClickOnListItemWhichContainsText;
import java.lang.String;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;

/**
 * This class was automatically generated by TestProject
 * Project: My first Project
 * Test: FillOutOffer_General
 * Generated by: C ANNICCHIARICO (come.annicchiarico@gireve.com)
 * Generated on Tue Aug 04 11:47:17 GMT 2020.
 */
@Test(
    name = "Fill_General_DescriptionOffer",
    description = "Fill out the offer description infos about an offer.",
    version = "1.0"
)
public class Fill_General_DescriptionOffer implements WebTest {
    @Parameter(
        description = "Opération/Réseau ?",
        defaultValue = "OP",
        direction = ParameterDirection.INPUT
    )
    public String Fill_General_stringOfferOperOrRes;

    @Parameter(
        description = "OffrePrivee/ Publique ?",
        defaultValue = "PR",
        direction = ParameterDirection.INPUT
    )
    public String Fill_General_stringOfferPrivateOrPublic;

    @Parameter(
        description = "Nom Exact de l'Opération ou du Réseau de l'EMP ciblé (si applicable)",
        defaultValue = "",
        direction = ParameterDirection.INPUT
    )
    public String Fill_General_stringOfferTarget;

    public ExecutionResult execute(WebTestHelper helper) throws FailureException {
        WebDriver driver = helper.getDriver();
        // set timeout for driver actions (similar to step timeout)
        driver.setTimeout(15000);
        TestReporter report = helper.getReporter();
        By by;
        boolean booleanResult;
        ExecutionResult executionresult;
        ClickOnListItemWhichContainsText clickOnListItemWhichContainsText;

        if (Fill_General_stringOfferOperOrRes.equals("RE")) {
            // 1. Click 'un r&eacute;seau'
            by = By.xpath("/html/body/div[2]/div/div/form/div[1]/div[3]/div/div[1]/div[1]/div[1]/div[2]/label");
            booleanResult = driver.testproject().click(by);
            report.step("Click 'un r&eacute;seau'", booleanResult, TakeScreenshotConditionType.Never);
        } else if (Fill_General_stringOfferOperOrRes.equals("OP")){
            // 2. Click 'une op&eacute;ration'
            by = By.xpath("/html/body/div[2]/div/div/form/div[1]/div[3]/div/div[1]/div[1]/div[1]/div[1]/label");
            booleanResult = driver.testproject().click(by);
            report.step("Click 'une op&eacute;ration' if it exists", true, TakeScreenshotConditionType.Never);
        } else {
            booleanResult = false ;
            report.step("Choix d'une op&eacute;ration ou d'un r&eacute;seau","Yes","Erreur Critique - Choisissez RE ou OP", booleanResult, TakeScreenshotConditionType.Always);
        }

        if (Fill_General_stringOfferPrivateOrPublic.equals("PU")) {
            // 3. Click 'l'ensemble des op&eacute;rateurs de m...'
            by = By.xpath("//div[2]/div[1]/div[1]/label");
            booleanResult = driver.testproject().click(by);
            report.step("Click 'l'ensemble des op&eacute;rateurs de m...'", booleanResult, TakeScreenshotConditionType.Never);
        } else if (Fill_General_stringOfferPrivateOrPublic.equals("PR")){
            // 4. Click 'un op&eacute;rateur de mobilit&eacute...'
            by = By.xpath("//div[2]/div[1]/div[2]/label");
            booleanResult = driver.testproject().click(by);
            report.step("Click 'un op&eacute;rateur de mobilit&eacute...'", booleanResult, TakeScreenshotConditionType.Never);
            
            by = By.cssSelector("#portal_bundle_appbundle_offer_intendedToPrivate");
            booleanResult = driver.testproject().click(by);
            report.step("Clicks on a list item based on text","Yes","Erreur Critique - L'op&eacuteration ou le r&acuteseau cibles sont incorrects ?", booleanResult, TakeScreenshotConditionType.Always); 

            by = By.xpath("/html/body/span/span/span[1]/input");
            booleanResult = driver.testproject().typeText(by,Fill_General_stringOfferTarget);
            report.step(String.format("Type '%s' in '#portal_bundle_appbundle_offer_intendedToPrivate'",Fill_General_stringOfferTarget), booleanResult, TakeScreenshotConditionType.Never);

            by = By.xpath("/html/body/span/span/span[1]/input");
            WebElement textbox = driver.findElement(by);
            textbox.sendKeys(Keys.ENTER);
            report.step(String.format("Type 'Enter' in '#portal_bundle_appbundle_offer_intendedToPrivate'"), true, TakeScreenshotConditionType.Never);

        } else {
            booleanResult = false ;
            report.step("Choix d'une offre priv&eacutee ou publique","Yes","Erreur Critique - Choisissez PU[Publique] ou PR[Priv&eacutee]", booleanResult, TakeScreenshotConditionType.Always);
        }
        return ExecutionResult.PASSED;
    }
    }
